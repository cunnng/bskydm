{
  "version": 3,
  "sources": ["src/index.js"],
  "sourcesContent": ["// @ts-check\n/// <reference types=\"@atproto/api\" />\n/// <reference types=\"coldsky\" />\n\nasync function dms() {\n  console.log('init');\n  const dependenciesLoaded = new Promise(resolve => {\n    dms.dependenciesLoaded = () => {\n      console.log('dependencies loaded OK.');\n      resolve();\n    };\n  });\n\n  console.log('wait for auth');\n  // https://bsky.app/settings/app-passwords\n  const atClient = await getAuthenticatedBsky();\n\n  async function getAuthenticatedBsky() {\n    let loginForm;\n    while (true) {\n      let auth = loginForm ? await loginForm.login() : getLocalStorageAuth();\n      if (!auth) {\n        loginForm = showLoginForm();\n        auth = await loginForm.login();\n      }\n\n      await dependenciesLoaded;\n\n      const atClient = coldsky.ColdskyAgent({ server: 'bsky.social' });\n      try {\n        await atClient.login({ identifier: auth.username, password: auth.password });\n        return atClient;\n      } catch (error) {\n        console.warn('AUTH ', error);\n        loginForm?.showError(error.message || String(error));\n      }\n    }\n\n    function getLocalStorageAuth() {\n      try {\n        const auth = localStorage.getItem('AUTH');\n        if (auth) {\n          const authObj = JSON.parse(auth);\n          if (authObj &&\n            typeof authObj === 'object' &&\n            authObj.username &&\n            authObj.password) {\n            return authObj;\n          }\n        }\n      } catch (error) {\n      }\n    }\n\n    function showLoginForm() {\n      const loginFORM = document.createElement('form');\n      const usernameINPUT = document.createElement('input');\n      usernameINPUT.name = 'username';\n      usernameINPUT.autocomplete = 'username';\n      usernameINPUT.placeholder = 'Username';\n      loginFORM.appendChild(usernameINPUT);\n\n      const passwordINPUT = document.createElement('input');\n      passwordINPUT.name = 'password';\n      passwordINPUT.type = 'password';\n      passwordINPUT.autocomplete = 'current-password';\n      passwordINPUT.placeholder = 'Password';\n      loginFORM.appendChild(passwordINPUT);\n\n      const submitINPUT = document.createElement('input');\n      submitINPUT.type = 'submit';\n      submitINPUT.value = 'Login';\n      loginFORM.appendChild(submitINPUT);\n\n      const errorDIV = document.createElement('div');\n      loginFORM.appendChild(errorDIV);\n\n      document.body.appendChild(loginFORM);\n\n      let resolveLoginPromise;\n      let loginPromise = new Promise(resolve => resolveLoginPromise = resolve);\n\n      submitINPUT.onclick = e => {\n        e.preventDefault?.();\n        e.stopPropagation?.();\n\n        if (!usernameINPUT.value || !passwordINPUT.value)\n          return;\n\n        resolveLoginPromise?.({\n          username: usernameINPUT.value,\n          password: passwordINPUT.value\n        });\n\n        loginPromise = new Promise(resolve => resolveLoginPromise = resolve);\n      };\n\n      return {\n        showError: (err) => {\n          errorDIV.textContent = err;\n        },\n        login: () => loginPromise,\n        remove: () => {\n          loginFORM.remove();\n        }\n      };\n    }\n\n  }\n\n} dms();"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAIA,WAAe,MAAM;AAAA;AACnB,cAAQ,IAAI,MAAM;AAClB,YAAM,qBAAqB,IAAI,QAAQ,aAAW;AAChD,YAAI,qBAAqB,MAAM;AAC7B,kBAAQ,IAAI,yBAAyB;AACrC,kBAAQ;AAAA,QACV;AAAA,MACF,CAAC;AAED,cAAQ,IAAI,eAAe;AAE3B,YAAM,WAAW,MAAM,qBAAqB;AAE5C,eAAe,uBAAuB;AAAA;AACpC,cAAI;AACJ,iBAAO,MAAM;AACX,gBAAI,OAAO,YAAY,MAAM,UAAU,MAAM,IAAI,oBAAoB;AACrE,gBAAI,CAAC,MAAM;AACT,0BAAY,cAAc;AAC1B,qBAAO,MAAM,UAAU,MAAM;AAAA,YAC/B;AAEA,kBAAM;AAEN,kBAAMA,YAAW,QAAQ,aAAa,EAAE,QAAQ,cAAc,CAAC;AAC/D,gBAAI;AACF,oBAAMA,UAAS,MAAM,EAAE,YAAY,KAAK,UAAU,UAAU,KAAK,SAAS,CAAC;AAC3E,qBAAOA;AAAA,YACT,SAAS,OAAO;AACd,sBAAQ,KAAK,SAAS,KAAK;AAC3B,qDAAW,UAAU,MAAM,WAAW,OAAO,KAAK;AAAA,YACpD;AAAA,UACF;AAEA,mBAAS,sBAAsB;AAC7B,gBAAI;AACF,oBAAM,OAAO,aAAa,QAAQ,MAAM;AACxC,kBAAI,MAAM;AACR,sBAAM,UAAU,KAAK,MAAM,IAAI;AAC/B,oBAAI,WACF,OAAO,YAAY,YACnB,QAAQ,YACR,QAAQ,UAAU;AAClB,yBAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF,SAAS,OAAO;AAAA,YAChB;AAAA,UACF;AAEA,mBAAS,gBAAgB;AACvB,kBAAM,YAAY,SAAS,cAAc,MAAM;AAC/C,kBAAM,gBAAgB,SAAS,cAAc,OAAO;AACpD,0BAAc,OAAO;AACrB,0BAAc,eAAe;AAC7B,0BAAc,cAAc;AAC5B,sBAAU,YAAY,aAAa;AAEnC,kBAAM,gBAAgB,SAAS,cAAc,OAAO;AACpD,0BAAc,OAAO;AACrB,0BAAc,OAAO;AACrB,0BAAc,eAAe;AAC7B,0BAAc,cAAc;AAC5B,sBAAU,YAAY,aAAa;AAEnC,kBAAM,cAAc,SAAS,cAAc,OAAO;AAClD,wBAAY,OAAO;AACnB,wBAAY,QAAQ;AACpB,sBAAU,YAAY,WAAW;AAEjC,kBAAM,WAAW,SAAS,cAAc,KAAK;AAC7C,sBAAU,YAAY,QAAQ;AAE9B,qBAAS,KAAK,YAAY,SAAS;AAEnC,gBAAI;AACJ,gBAAI,eAAe,IAAI,QAAQ,aAAW,sBAAsB,OAAO;AAEvE,wBAAY,UAAU,OAAK;AAlFjC;AAmFQ,sBAAE,mBAAF;AACA,sBAAE,oBAAF;AAEA,kBAAI,CAAC,cAAc,SAAS,CAAC,cAAc;AACzC;AAEF,yEAAsB;AAAA,gBACpB,UAAU,cAAc;AAAA,gBACxB,UAAU,cAAc;AAAA,cAC1B;AAEA,6BAAe,IAAI,QAAQ,aAAW,sBAAsB,OAAO;AAAA,YACrE;AAEA,mBAAO;AAAA,cACL,WAAW,CAAC,QAAQ;AAClB,yBAAS,cAAc;AAAA,cACzB;AAAA,cACA,OAAO,MAAM;AAAA,cACb,QAAQ,MAAM;AACZ,0BAAU,OAAO;AAAA,cACnB;AAAA,YACF;AAAA,UACF;AAAA,QAEF;AAAA;AAAA,IAEF;AAAA;AAAE,MAAI;",
  "names": ["atClient"]
}
